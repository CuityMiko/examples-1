<h1>模板和渲染</h1>

<h2>1. 框架提供的上下文变量</h2>

<style>
td {
  word-break: break-all;
}
</style>

<table class="table table-striped">
  <thead>
    <tr>
      <th width="15%">名称</th>
      <th width="40%">示例代码</th>
      <th width="45%">示例结果</th>
    </tr>
  </thead>

  <tbody>
    <tr>
      <td>JSON序列化 - json(data)</td>
      <td><code>json({ name: 'hello i\'m json' })</code></td>
      <td>{{ json({ name:'hello i\'m json' }) }}</td>
    </tr>

    <tr>
      <td>query参数</td>
      <td><code>query.page</code></td>
      <td>query.page: {{query.page}}</td>
    </tr>

    {{app.control('elements/context')}}

    <tr>
      <td>模块路由信息</td>
      <td>
        <code>route.module <br />route.action</code>
      </td>
      <td>
        <p>模块名(route.module): {{route.module}}</p>
        <p>Action(route.action): {{route.action}}</p>
      </td>
    </tr>

    <tr>
      <td>数据对象</td>
      <td>
        <code>self</code>
        <i>(可用于将数据对象传递给helper方法或control)</i>
      </td>
      <td>
        {{json(self)}}
      </td>
    </tr>
  </tbody>

</table>


<h2>2. 控制器Action指定的数据</h2>

<p>{{title}}</p>

<h3>code</h2>
<pre>
exports.view = function() {
  const data = {
    title: '我是来自Action的数据',
  };

  this.render(data);
};
</pre>


<h2>3. 过滤器(Filter)中可以传递数据</h2>

<p>{{desc}}</p>

<h3>code</h3>

<pre>
exports.beforeRender = function() {
  this.data.desc = '我是来自beforeRender的数据';
};
</pre>


<h2>4. 中间件(Middleware)中的数据要通过中间件间接才能在模板中使用</h2>

<p>中间件state中的数据可以通过控制器拿到，然后再放到渲染上下文中</p>

<strong>{{siteViewData.desc}}</strong>

<pre>
// 中间件相关代码
module.exports = function() {
  return function* (next) {
    this.state.siteViewData = {
      desc: '我的数据来自中间件lib/middlewares/site, 可以在控制器中使用'
    };

    yield* next;
  };
};
</pre>


<pre>
// 控制器相关代码
exports.view = function() {
  const data = {
    // come from middleware
    siteViewData: this.siteViewData
  };

  this.render(data);
};
</pre>

